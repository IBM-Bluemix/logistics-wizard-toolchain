---
name: "Cloud-native Toolchain for the Logistics Wizard"
description: "With this cloud-native toolchain, you use the logistics wizard template to create a supply chain management web app and back end that consists of multiple microservices: a Controller API, an ERP API, and a UI. The toolchain is preconfigured for continuous delivery, source control, blue-green deployment, unit testing, and issue tracking.\n\nTo get started, click **Create**."
version: 0.2
image: data:image/png;base64,$file(toolchain.png,base64)
required:
 - deploy
 - github

# Github repos
erp-api-repo:
  service_id: githubpublic
  parameters:
    repo_name: "{{github.parameters.erp-api-repo_name}}"
    repo_url: "{{github.parameters.erp-api-repo_url}}"
    type: clone
    has_issues: true
  hidden: [form, description]

controller-repo:
  service_id: githubpublic
  parameters:
    repo_name: "{{github.parameters.controller-repo_name}}"
    repo_url: "{{github.parameters.controller-repo_url}}"
    type: clone
    has_issues: true
  hidden: [form, description]

# Pipelines
erp-api-build:
  service_id: pipeline
  parameters:
    name: "logistics-wizard-erp"
    configuration:
      content: $file(erp-api.pipeline.yml)
      env:
        ERP_API_REPO: "erp-api-repo"
        CF_APP_NAME: "{{deploy.parameters.erp-app-name}}"
        COVERALLS_REPO_TOKEN: "{{github.parameters.erp-api-coveralls_token}}"
        PROD_SPACE_NAME: "{{deploy.parameters.prod-space}}"
        PROD_ORG_NAME: "{{deploy.parameters.prod-organization}}"
        PROD_REGION_ID: "{{deploy.parameters.prod-region}}"
      execute: true
    services: ["erp-api-repo"]
  hidden: [form, description]

controller-build:
  service_id: pipeline
  parameters:
    name: "logistics-wizard"
    configuration:
      content: $file(controller.pipeline.yml)
      env:
        CONTROLLER_REPO: "controller-repo"
        CF_APP_NAME: "{{deploy.parameters.controller-app-name}}"
        COVERALLS_REPO_TOKEN: "{{github.parameters.controller-coveralls_token}}"
        TEST_SMTP_USER_NAME: "{{email.parameters.test-email}}"
        TEST_SMTP_PASSWORD: "{{email.parameters.test-password}}"
        PROD_SMTP_USER_NAME: "{{email.parameters.prod-email}}"
        PROD_SMTP_PASSWORD: "{{email.parameters.prod-password}}"
        PROD_SPACE_NAME: "{{deploy.parameters.prod-space}}"
        PROD_ORG_NAME: "{{deploy.parameters.prod-organization}}"
        PROD_REGION_ID: "{{deploy.parameters.prod-region}}"
      execute: true
    services: ["controller-repo"]
  hidden: [form, description]

#Github
github:
  schema: github.json
  service-category: githubpublic
  parameters:
    erp-api-repo_name: "logistics-wizard-erp"
    erp-api-repo_url: https://github.com/IBM-Bluemix/logistics-wizard-erp
    erp-api-coveralls_token:
    controller-repo_name: "logistics-wizard"
    controller-repo_url: https://github.com/IBM-Bluemix/logistics-wizard
    controller-coveralls_token:

#Deployment
deploy:
  schema: deploy.json
  service-category: pipeline
  parameters:
    prod-region: "{{region}}"
    prod-organization: "{{organization}}"
    prod-space: logistics-wizard
    erp-app-name: "{{erp-api-repo.parameters.repo_name}}"
    controller-app-name: "{{controller-repo.parameters.repo_name}}"

#Email
email:
  schema: email.json
  service-category: pipeline
  parameters:
    test-email:
    test-password:
    prod-email:
    prod-password:
